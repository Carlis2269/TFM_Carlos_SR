
Starting Unicycler (2025-03-25 14:18:34)
----------------------------------------
    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you provided only short reads, Unicycler will essentially function as a SPAdes-optimiser. It will try many k-mer sizes, choose the best based on contig length and graph connectivity, and scaffold the graph using SPAdes repeat resolution.
    For more information, please see https://github.com/rrwick/Unicycler

Command: /home/shuri/miniconda3/bin/unicycler -1 /mnt/d/Documentos/Sequences/Illumina/Fastp_trimming/19_S19_trimmed_R1.fastq -2 /mnt/d/Documentos/Sequences/Illumina/Fastp_trimming/19_S19_trimmed_R2.fastq -o /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19

Unicycler version: v0.5.1
Using 8 threads

The output directory already exists:
  /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19

Dependencies:
  Program       Version   Status  
  spades.py     4.1.0     good    
  racon                   not used
  makeblastdb   2.5.0+    good    
  tblastn       2.5.0+    good    


Choosing k-mer range for assembly (2025-03-25 14:18:52)
-------------------------------------------------------
    Unicycler chooses a k-mer range for SPAdes based on the length of the input reads. It uses a wide range of many k-mer sizes to maximise the chance of finding an ideal assembly.

SPAdes maximum k-mer: 127
Median read length: 151
K-mer range: 27, 53, 71, 87, 99, 111, 119, 127


SPAdes assemblies (2025-03-25 14:19:04)
---------------------------------------
    Unicycler now uses SPAdes to assemble the short reads. It scores the assembly graph for each k-mer using the number of contigs (fewer is better) and the number of dead ends (fewer is better). The score function is 1/(c*(d+2)), where c is the contig count and d is the dead end count.

spades.py -o /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /mnt/d/Documentos/Sequences/Illumina/Fastp_trimming/19_S19_trimmed_R1.fastq -2 /mnt/d/Documentos/Sequences/Illumina/Fastp_trimming/19_S19_trimmed_R2.fastq -m 1024

spades.py -o /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/spades_assembly -k 27,53 --threads 8 --gfa11 --restart-from k27 -m 1024

spades.py -o /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/spades_assembly -k 27,53,71 --threads 8 --gfa11 --restart-from k53 -m 1024

spades.py -o /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/spades_assembly -k 27,53,71,87 --threads 8 --gfa11 --restart-from k71 -m 1024

spades.py -o /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/spades_assembly -k 27,53,71,87,99 --threads 8 --gfa11 --restart-from k87 -m 1024

spades.py -o /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/spades_assembly -k 27,53,71,87,99,111 --threads 8 --gfa11 --restart-from k99 -m 1024

spades.py -o /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/spades_assembly -k 27,53,71,87,99,111,119 --threads 8 --gfa11 --restart-from k111 -m 1024

spades.py -o /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/spades_assembly -k 27,53,71,87,99,111,119,127 --threads 8 --gfa11 --restart-from k119 -m 1024

K-mer   Contigs   Dead ends   Score   
   27         4           0   1.25e-01
   53         4           0   1.25e-01
   71         4           0   1.25e-01
   87         2           0   2.50e-01 <-best
   99         2           0   2.50e-01
  111         2           0   2.50e-01
  119         2           0   2.50e-01
  127         2           0   2.50e-01

Read depth filter: removed 49 contigs totalling 25567 bp
Deleting /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/spades_assembly/


Determining graph multiplicity (2025-03-25 14:39:13)
----------------------------------------------------
    Multiplicity is the number of times a sequence occurs in the underlying sequence. Single-copy contigs (those with a multiplicity of one, occurring only once in the underlying sequence) are particularly useful.

Saving /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/002_depth_filter.gfa


Cleaning graph (2025-03-25 14:39:13)
------------------------------------
    Unicycler now performs various cleaning procedures on the graph to remove overlaps and simplify the graph structure. The end result is a graph ready for bridging.

Graph overlaps removed

Saving /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/003_overlaps_removed.gfa

    Unicycler now selects a set of anchor contigs from the single-copy contigs. These are the contigs which will be connected via bridges to form the final assembly.

2 anchor segments (85,417 bp) out of 2 total segments (85,417 bp)


Creating SPAdes contig bridges (2025-03-25 14:39:13)
----------------------------------------------------
    SPAdes uses paired-end information to perform repeat resolution (RR) and produce contigs from the assembly graph. SPAdes saves the graph paths corresponding to these contigs in the contigs.paths file. When one of these paths contains two or more anchor contigs, Unicycler can create a bridge from the path.

No SPAdes contig bridges


Creating loop unrolling bridges (2025-03-25 14:39:13)
-----------------------------------------------------
    When a SPAdes contig path connects an anchor contig with the middle contig of a simple loop, Unicycler concludes that the sequences are contiguous (i.e. the loop is not a separate piece of DNA). It then uses the read depth of the middle and repeat contigs to guess the number of times to traverse the loop and makes a bridge.

No loop unrolling bridges made
none found


Applying bridges (2025-03-25 14:39:13)
--------------------------------------
    Unicycler now applies to the graph in decreasing order of quality. This ensures that when multiple, contradictory bridges exist, the most supported option is used.

Bridge type   Start -> end   Path   Quality

Saving /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/004_bridges_applied.gfa


Bridged assembly graph (2025-03-25 14:39:13)
--------------------------------------------
    The assembly is now mostly finished and no more structural changes will be made. Ideally the assembly graph should now have one contig per replicon and no erroneous contigs (i.e. a complete assembly). If there are more contigs, then the assembly is not complete.

Saving /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/005_final_clean.gfa

Component   Segments   Links   Length   N50      Longest segment   Status  
    total          2       2   85,417   43,498            43,498           
        1          1       1   43,498   43,498            43,498   complete
        2          1       1   41,919   41,919            41,919   complete


Rotating completed replicons (2025-03-25 14:39:13)
--------------------------------------------------
    Any completed circular contigs (i.e. single contigs which have one link connecting end to start) can have their start position changed without altering the sequence. For consistency, Unicycler now searches for a starting gene (dnaA or repA) in each such contig, and if one is found, the contig is rotated to start with that gene on the forward strand.

Segment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage
      1   43,498   1.00x   none found                                             
      2   41,919   0.07x   none found                                             


Assembly complete (2025-03-25 14:40:09)
---------------------------------------
Saving /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/assembly.gfa
Saving /mnt/d/Documentos/Sequences/Illumina/Unicycler_assemblies/19_S19/assembly.fasta

